============================= test session starts ==============================
platform linux -- Python 3.6.7, pytest-5.2.1, py-1.8.0, pluggy-0.13.0
rootdir: /root/tools
collected 1 item

sysanalyzer/test_sysanalyzer.py F                                        [100%]

=================================== FAILURES ===================================
__________________________________ test_help ___________________________________

self = <docker.api.client.APIClient object at 0x7f2a6b836470>
response = <Response [400]>

    def _raise_for_status(self, response):
        """Raises stored :class:`APIError`, if one occurred."""
        try:
>           response.raise_for_status()

venv/lib/python3.6/site-packages/docker/api/client.py:261: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Response [400]>

    def raise_for_status(self):
        """Raises stored :class:`HTTPError`, if one occurred."""
    
        http_error_msg = ''
        if isinstance(self.reason, bytes):
            # We attempt to decode utf-8 first because some servers
            # choose to localize their reason strings. If the string
            # isn't utf-8, we fall back to iso-8859-1 for all other
            # encodings. (See PR #3538)
            try:
                reason = self.reason.decode('utf-8')
            except UnicodeDecodeError:
                reason = self.reason.decode('iso-8859-1')
        else:
            reason = self.reason
    
        if 400 <= self.status_code < 500:
            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)
    
        elif 500 <= self.status_code < 600:
            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)
    
        if http_error_msg:
>           raise HTTPError(http_error_msg, response=self)
E           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.35/build?t=test_sysanalyzer&q=False&nocache=False&rm=True&forcerm=False&pull=False

venv/lib/python3.6/site-packages/requests/models.py:940: HTTPError

During handling of the above exception, another exception occurred:

    def test_help():
>       tool = dockertools.tool_with_file(__file__)

sysanalyzer/test_sysanalyzer.py:5: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
metatool/dockertools.py:217: in tool_with_file
    return ToolImage(path=path, tag=tag)
metatool/dockertools.py:29: in __init__
    self.image, log = self.client.images.build(path=path, tag=tag, rm=rm)
venv/lib/python3.6/site-packages/docker/models/images.py:285: in build
    for chunk in internal_stream:
venv/lib/python3.6/site-packages/docker/utils/json_stream.py:66: in split_buffer
    for data in stream_as_text(stream):
venv/lib/python3.6/site-packages/docker/utils/json_stream.py:22: in stream_as_text
    for data in stream:
venv/lib/python3.6/site-packages/docker/api/client.py:354: in _stream_helper
    yield self._result(response, json=decode)
venv/lib/python3.6/site-packages/docker/api/client.py:267: in _result
    self._raise_for_status(response)
venv/lib/python3.6/site-packages/docker/api/client.py:263: in _raise_for_status
    raise create_api_error_from_http_exception(e)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

e = HTTPError('400 Client Error: Bad Request for url: http+docker://localhost/v1.35/build?t=test_sysanalyzer&q=False&nocache=False&rm=True&forcerm=False&pull=False',)

    def create_api_error_from_http_exception(e):
        """
        Create a suitable APIError from requests.exceptions.HTTPError.
        """
        response = e.response
        try:
            explanation = response.json()['message']
        except ValueError:
            explanation = (response.content or '').strip()
        cls = APIError
        if response.status_code == 404:
            if explanation and ('No such image' in str(explanation) or
                                'not found: does not exist or no pull access'
                                in str(explanation) or
                                'repository does not exist' in str(explanation)):
                cls = ImageNotFound
            else:
                cls = NotFound
>       raise cls(e, response=response, explanation=explanation)
E       docker.errors.APIError: 400 Client Error: Bad Request ("Dockerfile parse error line 6: unknown instruction: [NET.SECURITYPROTOCOLTYPE]::TLS12;")

venv/lib/python3.6/site-packages/docker/errors.py:31: APIError
============================== 1 failed in 0.66s ===============================
