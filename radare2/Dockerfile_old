FROM alpine:edge AS builder

# Prevent build fails because of interactive scripts when compiling
ENV DEBIAN_FRONTEND noninteractive

ENV VERSION 4.0.0
ENV radare2_SHA256_4.1.0 f86a4e070c61f58290c94d97897d6433ee8c4fef102e26d94be9279b7ab70988
ENV radare2_SHA256 5ec7639fc6625dd395ce81c192a7d4a7d624ac87405621d3aae0ecbcd89c670c


ENV INSTALL_ROOT /radare2
# Dependencies
RUN apk add --no-cache \
        libc6-compat \
        make \
        ncurses-libs \
		npm \
        cmake \
        g++ \
        gcc \
        git \
        linux-headers \
        unzip \
        wget \
        curl \
        git \
        bison \
        flex \
        xxd \
        pkgconfig
        # sudo


RUN addgroup -S appuser && \
    adduser -s /sbin/nologin --disabled-password -G appuser appuser

# RUN install -d -o appuser -g appuser -m 770 /radare2/
RUN mkdir "$INSTALL_ROOT" \
    && chown -R appuser:appuser "$INSTALL_ROOT" \
    && chmod -R 775 "$INSTALL_ROOT"

USER appuser

RUN wget --progress=bar:force -O "$INSTALL_ROOT"/radare2.zip "https://github.com/radareorg/radare2/archive/$VERSION.zip" \
    && echo "$radare2_SHA256"  \
    && sha256sum "$INSTALL_ROOT"/radare2.zip \
    && echo "$radare2_SHA256  $INSTALL_ROOT/radare2.zip" | sha256sum -c - \
    && unzip "$INSTALL_ROOT"/radare2.zip -d "$INSTALL_ROOT"

WORKDIR "$INSTALL_ROOT/radare2-$VERSION/sys"

RUN sh build.sh "$INSTALL_ROOT/build" && make install

ENV PATH="$INSTALL_ROOT"/bin:"$PATH"

USER root

RUN cp -RT /radare2/lib/ /usr/lib && cp -RT /radare2/include/ /usr/include && cp -RT /radare2/share/ /usr/share

# RUN rm -rf /radare2/lib /radare2/include /radare2/share

USER appuser

RUN r2pm init && \
    r2pm update && \
    r2pm -i r2ghidra-dec 

USER root
RUN		apk del --purge -r \
        libc6-compat \
        make \
        ncurses-libs \
		npm \
        cmake \
        g++ \
        gcc \
        git \
        linux-headers \
        unzip \
        wget \
        curl \
        git \
        pkgconfig \
        bison \
        flex \
		&& rm -rf /tmp/* /var/cache/apk/* /var/tmp/* 

# Script based packages

RUN apk add --no-cache graphviz

# Folders for scripts

RUN mkdir -p /r2/samples && \
    mkdir -p /r2/results && \
    chown -R appuser:appuser /r2/results && \
    chown -R appuser:appuser /r2/samples/


USER appuser
# Optional r2dec r2frida

# SECOND STAGE

# FROM alpine:edge AS runner

# ENV INSTALL_ROOT /radare2

# ENV VERSION 4.0.0
# ENV R2_PIPE_PY_VERSION=1.4.2

# # # Get liblarires and bins from builder
# COPY --from=builder "$INSTALL_ROOT/" "$INSTALL_ROOT/"
# COPY --from=builder "$INSTALL_ROOT/radare2-$VERSION/" "$INSTALL_ROOT/radare2-$VERSION/"
# COPY --from=builder "$INSTALL_ROOT/radare2-$VERSION/binr/" "$INSTALL_ROOT/radare2-$VERSION/binr"
# COPY --from=builder "$INSTALL_ROOT/radare2-$VERSION/libr/" "$INSTALL_ROOT/radare2-$VERSION/libr"
# COPY --from=builder "$INSTALL_ROOT"/bin/ "$INSTALL_ROOT"/bin
# COPY --from=builder "$INSTALL_ROOT"/lib/ /usr/lib
# COPY --from=builder "$INSTALL_ROOT"/include/ /usr/include
# COPY --from=builder "$INSTALL_ROOT"/share/ /usr/share

COPY entrypoint.sh "$INSTALL_ROOT"/entrypoint.sh
COPY scripts "$INSTALL_ROOT"/scripts


# RUN du -sh /radare2 && du -sh /home/appuser/.local/share/radare2/



ENV PATH="$INSTALL_ROOT"/bin:"$PATH"
# Used by wrapper script
ENV R2_HOME="$INSTALL_ROOT"/bin
ENV R2_SCRIPTS="$INSTALL_ROOT"/scripts

# # Plugin things

# RUN apk add --no-cache git\
#         cmake \
#         g++ \
#         gcc \
#         bison

# RUN r2pm init && \
#     r2pm update && \
#     r2pm -i r2ghidra-dec 


# COPY --from=builder /home/appuser/.local/share/radare2/ /home/appuser/.local/share/radare2

# # Plugin manager configuration
# ENV R2PM_PLUGDIR=/home/appuser/.local/share/radare2/plugins
# ENV R2PM_BINDIR=/home/appuser/.local/share/radare2/prefix/bin
# ENV R2PM_DBDIR=/home/appuser/.local/share/radare2/r2pm/db
# ENV R2PM_GITDIR=/home/appuser/.local/share/radare2/r2pm/git/

# Remove .git directory
# RUN rm -rf /home/appuser/.local/share/radare2/r2pm/git/

# RUN addgroup -S appuser && \
#     adduser -s /sbin/nologin --disabled-password -G appuser appuser

# USER appuser

WORKDIR /home/appuser

ENTRYPOINT ["sh", "/radare2/entrypoint.sh"]
